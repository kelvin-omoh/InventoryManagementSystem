// 'use client'
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import React from 'react';
import Header from '../components/Header';
import TopCards from '../components/TopCards';
import BarChart from '../components/BarChart';
import RecentOrders from '../components/RecentOrders';
import Head from 'next/head';
import Sidebar from '../components/Sidebar';

import { collection, doc,addDoc, setDoc } from "firebase/firestore"; 
import {db} from "../FirebaseConfig"

import { useState } from 'react';

const addproduct = () => {

const[productName,setProductName]=useState('')
const[description,setDescription]=useState('')
const[sellingPrice,setSellingPrice]=useState('')
const[categories,setCategories]=useState('')
const[costPrice,setCostPrice]=useState('')
const[quantity,setQuantity]=useState('')
const [day,setDay]=useState('')
const [week,setWeek]=useState('')

const addProduct =async(e)=>{
  e.preventDefault()

  
  try {
// Add a new document with a generated id
const newItem={
  productName,
  description,
  sellingPrice,
  categories,
  costPrice,
  quantity,
  day,
  week
}
if(categories==='Categories'){
  toast.warn("Please select a category for your Product");
}else{
  const inventoryRef = await addDoc(collection(db, "inventory"),newItem);

toast.success("ðŸ¤© Product has been added to the inventory!!");
setProductName('')
setDescription('')
setSellingPrice('')
setCategories('Categories')
setCostPrice('')
setQuantity('')
setDay('')
setWeek('')

}


}
catch (e) {
  console.error("Error adding document: ", e);
}




}


  return (
    <div>
       <Head>
        <title>Dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
<Sidebar>

     <main className='px-3  bg-gray-100 h-[150vh]  '>
   
        <Header />
        <ToastContainer />

        {/* <TopCards /> */}
      
       
        <div className='p-4 w-full grid  gap-2'>
             <h1 className=' text-[#010D82]  font-semibold'>Add Products</h1>
           <form className=' flex items-center w-full justify-center gap-7 p-4 text-[1.1em] border bg-white/80 rounded-md'  action="">
            <div className=' flex  gap-4 flex-col w-full '>
                <input required value={productName} onChange={(e)=>setProductName(e.target.value)} type="text" className=' p-4 text-[1.1em] border bg-white/80 rounded-md' placeholder=' product Name' name="" id="" />
                <select required value={categories} onChange={(e) => setCategories(e.target.value)} className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  name="" id="">

                <option value={'Categories'}>Select a category</option>
                <option value={'Drinks & Water'}>Drinks and Water</option>
                <option value={'Snacks & Sweet'}>Snacks & Sweet</option>
                <option value={"Stationaries"}>Stationaries</option>
                <option value={'Provisions'}>Provisions</option>

            </select>
            <div className=' flex gap-4  justify-start items-center '>
                 <input required value={sellingPrice} onChange={(e)=>setSellingPrice(e.target.value)} className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  type="number" placeholder='selling price' />
                 <input required value={costPrice} onChange={(e)=>setCostPrice(e.target.value)} className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  type="number" placeholder='Cost Price' />
                 
            </div>
            <input required value={quantity} onChange={(e)=>setQuantity(e.target.value)} className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  type="number" placeholder='Quantity in Stock' />
                 
            </div>
            <div className='gap-4  flex flex-col'>
                <button type='submit' onClick={(e)=>addProduct(e)} className=' p-4 bg-indigo-500 text-white w-fit rounded-md'>Save & push</button>
                <textarea value={description} onChange={(e)=>setDescription(e.target.value)} placeholder='Short Description' className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  name="" id="" cols="30" rows="3"></textarea>
                <h3 className=' font-semibold text-center text-gray-600'>EXPIRARTION DATE</h3>
                <input required  value={week} onChange={(e)=>setWeek(e.target.value)}  className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  type="week" />
                <input required value={day} onChange={(e)=>setDay(e.target.value)}  className=' p-4 text-[1.1em] border bg-white/80 rounded-md'  type="date" />
            </div>
            
           </form>
        </div>
      </main>
</Sidebar>
    </div>
  )
}

export default addproduct
